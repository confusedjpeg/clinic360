{"ast":null,"code":"var _jsxFileName = \"D:\\\\clinic360\\\\clinic360-frontend\\\\src\\\\components\\\\DoctorDashboard.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst DoctorDashboard = () => {\n  const token = localStorage.getItem(\"accessToken\");\n  const [appointments, setAppointments] = useState([]);\n  useEffect(() => {\n    // Replace this with a valid endpoint to fetch doctor appointments.\n    axios.get(\"http://localhost:8000/doctor-appointments\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      setAppointments(response.data);\n    }).catch(err => {\n      console.error(\"Error fetching appointments:\", err);\n    });\n  }, [token]);\n  const handleUpdateRecord = async recordId => {\n    try {\n      const updateData = {\n        record_details: \"Updated details from doctor\"\n      };\n      await axios.put(`http://localhost:8000/update-record/${recordId}/`, updateData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"Record updated successfully!\");\n    } catch (err) {\n      console.error(\"Error updating record:\", err);\n      alert(\"Error updating record.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Doctor Dashboard\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Appointments\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, appointments && appointments.length > 0 ? appointments.map(appt => /*#__PURE__*/React.createElement(\"li\", {\n    key: appt.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Appointment with patient \", appt.patient_id, \" at \", new Date(appt.appointment_time).toLocaleString())) : /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"No appointments found.\")), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Patient Records Management\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleUpdateRecord(\"record-uuid-placeholder\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Update Record Example\"));\n};\nexport default DoctorDashboard;","map":{"version":3,"names":["React","useEffect","useState","axios","DoctorDashboard","token","localStorage","getItem","appointments","setAppointments","get","headers","Authorization","then","response","data","catch","err","console","error","handleUpdateRecord","recordId","updateData","record_details","put","alert","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","map","appt","key","id","patient_id","Date","appointment_time","toLocaleString","onClick"],"sources":["D:/clinic360/clinic360-frontend/src/components/DoctorDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DoctorDashboard = () => {\r\n  const token = localStorage.getItem(\"accessToken\");\r\n  const [appointments, setAppointments] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    // Replace this with a valid endpoint to fetch doctor appointments.\r\n    axios.get(\"http://localhost:8000/doctor-appointments\", {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    })\r\n    .then((response) => {\r\n      setAppointments(response.data);\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Error fetching appointments:\", err);\r\n    });\r\n  }, [token]);\r\n\r\n  const handleUpdateRecord = async (recordId) => {\r\n    try {\r\n      const updateData = { record_details: \"Updated details from doctor\" };\r\n      await axios.put(`http://localhost:8000/update-record/${recordId}/`, updateData, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      alert(\"Record updated successfully!\");\r\n    } catch (err) {\r\n      console.error(\"Error updating record:\", err);\r\n      alert(\"Error updating record.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Doctor Dashboard</h2>\r\n      <h3>Appointments</h3>\r\n      <ul>\r\n        {appointments && appointments.length > 0 ? (\r\n          appointments.map(appt => (\r\n            <li key={appt.id}>\r\n              Appointment with patient {appt.patient_id} at {new Date(appt.appointment_time).toLocaleString()}\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li>No appointments found.</li>\r\n        )}\r\n      </ul>\r\n      <h3>Patient Records Management</h3>\r\n      {/* Demo button: in a real scenario, list records and allow editing */}\r\n      <button onClick={() => handleUpdateRecord(\"record-uuid-placeholder\")}>\r\n        Update Record Example\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}