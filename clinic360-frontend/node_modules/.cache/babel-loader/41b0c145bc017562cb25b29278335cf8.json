{"ast":null,"code":"var _jsxFileName = \"D:\\\\clinic360\\\\clinic360-frontend\\\\src\\\\components\\\\patient\\\\PatientLogin.jsx\";\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport axios from 'axios';\nconst PatientLogin = () => {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const formData = new URLSearchParams();\n      formData.append(\"username\", username);\n      formData.append(\"password\", password);\n      const response = await axios.post(\"http://localhost:8000/token\", formData, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      });\n      localStorage.setItem(\"accessToken\", response.data.access_token);\n      localStorage.setItem(\"role\", \"patient\");\n      // Optionally, store patientId if provided by the backend\n      navigate(\"/dashboard/patient\");\n    } catch (err) {\n      setError(\"Login failed. Please check your credentials.\");\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Patient Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Username\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Login\")), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Don't have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/register/patient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }, \"Register here\")));\n};\nexport default PatientLogin;","map":{"version":3,"names":["React","useState","useNavigate","Link","axios","PatientLogin","navigate","username","setUsername","password","setPassword","error","setError","handleLogin","e","preventDefault","formData","URLSearchParams","append","response","post","headers","localStorage","setItem","data","access_token","err","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","style","color","to"],"sources":["D:/clinic360/clinic360-frontend/src/components/patient/PatientLogin.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst PatientLogin = () => {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const formData = new URLSearchParams();\r\n      formData.append(\"username\", username);\r\n      formData.append(\"password\", password);\r\n      \r\n      const response = await axios.post(\"http://localhost:8000/token\", formData, {\r\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" }\r\n      });\r\n      \r\n      localStorage.setItem(\"accessToken\", response.data.access_token);\r\n      localStorage.setItem(\"role\", \"patient\");\r\n      // Optionally, store patientId if provided by the backend\r\n      navigate(\"/dashboard/patient\");\r\n    } catch (err) {\r\n      setError(\"Login failed. Please check your credentials.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Patient Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e)=> setUsername(e.target.value)} required />\r\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e)=> setPassword(e.target.value)} required />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      {error && <p style={{color:\"red\"}}>{error}</p>}\r\n      <p>Don't have an account? <Link to=\"/register/patient\">Register here</Link></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}